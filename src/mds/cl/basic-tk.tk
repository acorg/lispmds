set home         $env(HOME)

#replaced with below for UCLA  option add *font -adobe-helvetica-medium-r-normal--0-0-75-75-p-0-iso8859-1
#option add *font -Adobe-Times-Medium-R-Normal-*-75-*

proc rest {list} {
	lreplace 0 0 $list
}

#proc tolisp {arg} {
#	send lisp_blt_wish to_lisp [format "\"%s\"" $arg]
#}

button .quit-button -bitmap @bitmaps/quit.xbm -command { 
    	catch "send GraphConfig after 1 exit" 
	tolisp "(tk-close $lisp_tk_stream_number)"
#       this destroy is in the case that we are running without a lisp_tclsh
#	after 100 destroy .
}

proc remove {e l} {
	set position [lsearch -exact $l $e]
	if {($position == -1)} \
		{return $l} \
	else {return [concat [lrange $l 0 [expr $position-1]] \
			     [lrange $l [expr $position+1] [llength $l]]]}
}

proc dialog {w title text bitmap default args} {
	global button

	# 1. Create the top-level window and divide it into top
	# and bottom parts.

	toplevel $w -class Dialog
	wm title $w $title
	wm iconname $w Dialog
	frame $w.top -relief raised -bd 1
	pack $w.top -side top -fill both
	frame $w.bot -relief raised -bd 1
	pack $w.bot -side bottom -fill both

	# 2. Fill the top part with the bitmap and message.

	message $w.top.msg -width 3i -text $text\
			-font -Adobe-Times-Medium-R-Normal-*-180-*
	pack $w.top.msg -side right -expand 1 -fill both\
			-padx 3m -pady 3m
	if {$bitmap != ""} {
		label $w.top.bitmap -bitmap $bitmap
		pack $w.top.bitmap -side left -padx 3m -pady 3m
	}

	# 3. Create a row of buttons at the bottom of the dialog.

	set i 0
	foreach but $args {
		button $w.bot.button$i -text $but -command\
				"set button $i"
		if {$i == $default} {
			frame $w.bot.default -relief sunken -bd 1
			raise $w.bot.button$i
			pack $w.bot.default -side left -expand 1\
					-padx 3m -pady 2m
			pack $w.bot.button$i -in $w.bot.default\
					-side left -padx 2m -pady 2m\
					-ipadx 2m -ipady 1m
		} else {
			pack $w.bot.button$i -side left -expand 1\
					-padx 3m -pady 3m -ipadx 2m -ipady 1m
		}
		incr i
	}

	# 4. Set up a binding for <Return>, if there`s a default,
	# set a grab, and claim the focus too.

	if {$default >= 0} {
		bind $w <Return> "$w.bot.button$default flash; \
			set button $default"
	}
	set oldFocus [focus]
	grab set $w
	focus $w

	# 5. Wait for the user to respond, then restore the focus
	# and return the index of the selected button.

	tkwait variable button
	destroy $w
	focus $oldFocus
	return $button
}
